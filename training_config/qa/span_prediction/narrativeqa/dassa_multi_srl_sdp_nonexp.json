{
    "dataset_reader": {
        "type": "narrativeqa_summary_with_questions_semantic_optimized_multiview",
        "fit_answer_in_the_passage_limit": false,
        "lazy": false,
        "passage_length_limit": 800,
        "question_length_limit": 50,
        "semantic_views_extractor": {
            "type": "multiple_flat_views",
            "feature_extractors": [
                {
                    "max_verbs": 3,
                    "namespace": "srl",
                    "pad_views": true,
                    "type": "srl_flat_views"
                },
                {
                    "labels_start_id": 1,
                    "max_explicit_views": 0,
                    "max_nonexplicit_views": 2,
                    "max_views": 2,
                    "namespace": "sdp",
                    "type": "sdp_flat_views",
                    "use_explicit": false,
                    "use_nonexplicit": true,
                    "use_senses_for_tags": true
                }
            ],
            "labels_start_id": 1,
            "max_views": 5
        },
        "skip_invalid_examples": true,
        "token_indexers": {
            "token_characters": {
                "type": "characters",
                "character_tokenizer": {
                    "byte_encoding": "utf-8",
                    "end_tokens": [
                        260
                    ],
                    "start_tokens": [
                        259
                    ]
                },
                "min_padding_length": 5
            },
            "tokens": {
                "type": "single_id",
                "lowercase_tokens": true
            }
        },
        "tokenizer": {
            "type": "word",
            "word_splitter": {
                "type": "read_sentence_parse_typewise",
                "fields": [
                    "tokens->text"
                ]
            }
        }
    },
    "iterator": {
        "type": "bucket",
        "batch_size": "2",
        "sorting_keys": [
            [
                "passage",
                "num_tokens"
            ],
            [
                "question",
                "num_tokens"
            ]
        ]
    },
    "model": {
        "type": "qanet_semantic_flat",
        "dropout_prob": 0.1,
        "initializer": [
            [
                ".*queries_projection",
                {
                    "type": "xavier_normal"
                }
            ],
            [
                ".*keys_projection",
                {
                    "type": "xavier_normal"
                }
            ]
        ],
        "matrix_attention_layer": {
            "type": "linear",
            "combination": "x,y,x*y",
            "tensor_1_dim": 128,
            "tensor_2_dim": 128
        },
        "modeling_layer": {
            "type": "qanet_semantic_flat_concat_encoder",
            "attention_dropout_prob": 0,
            "attention_projection_dim": 128,
            "conv_kernel_size": 5,
            "dropout_prob": 0.1,
            "feedforward_hidden_dim": 128,
            "hidden_dim": 128,
            "input_dim": 128,
            "layer_dropout_undecayed_prob": 0.1,
            "multi_head_attention_batch_computation": true,
            "num_attention_heads": 8,
            "num_blocks": 7,
            "num_convs_per_block": 2,
            "num_semantic_labels": 250,
            "replace_zero_semantic_labels_with_per_head_labels": true,
            "semantic_emb_dim": 16,
            "semantic_integration_mode": "concat",
            "semantic_views_layers": [
                1,
                3,
                5
            ],
            "use_semantic_views": true
        },
        "num_highway_layers": 2,
        "phrase_layer": {
            "type": "qanet_encoder",
            "attention_dropout_prob": 0,
            "attention_projection_dim": 128,
            "conv_kernel_size": 7,
            "dropout_prob": 0.1,
            "feedforward_hidden_dim": 128,
            "hidden_dim": 128,
            "input_dim": 200,
            "layer_dropout_undecayed_prob": 0.1,
            "num_attention_heads": 8,
            "num_blocks": 1,
            "num_convs_per_block": 4
        },
        "regularizer": [
            [
                ".*",
                {
                    "alpha": 1e-07,
                    "type": "l2"
                }
            ]
        ],
        "text_field_embedder": {
            "token_embedders": {
                "token_characters": {
                    "type": "character_encoding",
                    "dropout": 0.1,
                    "embedding": {
                        "embedding_dim": 16,
                        "num_embeddings": 262
                    },
                    "encoder": {
                        "type": "cnn",
                        "embedding_dim": 16,
                        "ngram_filter_sizes": [
                            5
                        ],
                        "num_filters": 100
                    }
                },
                "tokens": {
                    "type": "embedding",
                    "embedding_dim": 100,
                    "pretrained_file": "https://s3-us-west-2.amazonaws.com/allennlp/datasets/glove/glove.6B.100d.txt.gz",
                    "trainable": false
                }
            }
        }
    },
    "train_data_path": "data/narrativeqa_annotated/summaries_annotated.jsonl.train",
    "validation_data_path": "data/narrativeqa_annotated/summaries_annotated.jsonl.valid",
    "test_data_path": "data/narrativeqa_annotated/summaries_annotated.jsonl.test",
    "trainer": {
        "accumulation_steps": "16",
        "cuda_device": 0,
        "grad_norm": 5,
        "learning_rate_scheduler": {
            "type": "reduce_on_plateau",
            "factor": 0.5,
            "mode": "max",
            "patience": 8
        },
        "num_epochs": 70,
        "num_serialized_models_to_keep": 3,
        "optimizer": {
            "type": "adam",
            "betas": [
                0.8,
                0.999
            ],
            "eps": 1e-07,
            "lr": 0.001
        },
        "patience": 20,
        "validation_metric": "+rouge-l"
    },
    "evaluate_on_test": true,
    "validation_dataset_reader": {
        "type": "narrativeqa_summary_with_questions_semantic_optimized_multiview",
        "fit_answer_in_the_passage_limit": false,
        "lazy": false,
        "semantic_views_extractor": {
            "type": "multiple_flat_views",
            "feature_extractors": [
                {
                    "max_verbs": 3,
                    "namespace": "srl",
                    "pad_views": true,
                    "type": "srl_flat_views"
                },
                {
                    "labels_start_id": 1,
                    "max_explicit_views": 0,
                    "max_nonexplicit_views": 2,
                    "max_views": 2,
                    "namespace": "sdp",
                    "type": "sdp_flat_views",
                    "use_explicit": false,
                    "use_nonexplicit": true,
                    "use_senses_for_tags": true
                }
            ],
            "labels_start_id": 1,
            "max_views": 5
        },
        "skip_invalid_examples": true,
        "token_indexers": {
            "token_characters": {
                "type": "characters",
                "character_tokenizer": {
                    "byte_encoding": "utf-8",
                    "end_tokens": [
                        260
                    ],
                    "start_tokens": [
                        259
                    ]
                },
                "min_padding_length": 5
            },
            "tokens": {
                "type": "single_id",
                "lowercase_tokens": true
            }
        },
        "tokenizer": {
            "type": "word",
            "word_splitter": {
                "type": "read_sentence_parse_typewise",
                "fields": [
                    "tokens->text"
                ]
            }
        }
    }
}